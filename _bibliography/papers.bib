---
---

@string{aps = {American Physical Society,}}

@article{mosser_modelling_2022,
	title = {Modelling {Agile} {Backlogs} as {Composable} {Artifacts} to support {Developers} and {Product} {Owners}},
	volume = {21},
	copyright = {All rights reserved},
	url = {https://doi.org/10.5381/jot.2022.21.3.a3},
	doi = {10.5381/jot.2022.21.3.a3},
	abstract = {The DevOps paradigm combines (agile) software development and IT operations to deliver high-quality software, thanks to a feedback loop where “ops” feed “devs” and vice versa. In this context, a central challenge is to reduce as much as possible the duration of the feedback loop, allowing stakeholders to reduce their time-to-market and release process duration. This paper describes how to model a product backlog (usually expressed as informal user stories in plain text in an agile context) as a queryable graph-based model. This graph is automatically extracted from existing artifacts thanks to natural language processing techniques. Then, developers and product owners can support their iteration planning process by leveraging the model, enacting a short-range impact analysis feedback loop of their planning decisions. The approach considers the iterative and incremental nature of agile methods through the deﬁnition of composition operators to incrementally build the models. We have validated this approach on ﬁve industrial scenarios, on top of a reference open-source dataset of 22 product backlogs, representing 1, 671 user stories.},
	language = {en},
	number = {3},
	journal = {The Journal of Object Technology},
	author = {Mosser, Sébastien and Pulgar, Corinne and Reinharz, Vladimir},
	year = {2022},
	pages = {14},
	file = {Mosser et al. - Modelling Agile Backlogs as Composable Artefacts t.pdf:/Users/corinne/Zotero/storage/RBGTSHF3/Mosser et al. - Modelling Agile Backlogs as Composable Artefacts t.pdf:application/pdf},
}

@inproceedings{pulgar_eat_2022,
	address = {Montreal, QC, Canada},
	title = {Eat {Your} {Own} {DevOps}: {A} {Model} {Driven} {Approach} to {Justify} {Continuous} {Integration} {Pipelines}},
	copyright = {All rights reserved},
	url = {https://conf.researchr.org/track/models-2022/models-2022-acm-student-research-competition},
	abstract = {Many aspiring DevOps projects have introduced continuous devel- opment or continuous integration pipelines to their workflow as proof of their trustworthiness. However, a quality control protocol for pipelines has yet to be researched. This contribution suggests a model-driven approach using justification diagrams as a means to evaluate a pipeline’s coherency with its project. The approach is partly automated and tested on three open-source projects with promising results.},
	language = {English},
	author = {Pulgar, Corinne},
	month = oct,
	year = {2022},
	file = {Pulgar - 2022 - Eat Your Own DevOps A Model Driven Approach to Ju.pdf:/Users/corinne/Zotero/storage/99F6WPNV/Pulgar - 2022 - Eat Your Own DevOps A Model Driven Approach to Ju.pdf:application/pdf},
}
